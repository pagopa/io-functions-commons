ApplicationInfo:
  required:
  - name
  - version
  type: object
  properties:
    name:
      type: string
    version:
      type: string
ProblemJson:
  type: object
  properties:
    type:
      type: string
      description: |-
        An absolute URI that identifies the problem type. When dereferenced,
        it SHOULD provide human-readable documentation for the problem type
        (e.g., using HTML).
      format: uri
      example: https://example.com/problem/constraint-violation
      default: about:blank
    title:
      type: string
      description: |-
        A short, summary of the problem type. Written in english and readable
        for engineers (usually not suited for non technical stakeholders and
        not localized); example: Service Unavailable
    status:
      $ref: '#/HttpStatusCode'
    detail:
      type: string
      description: |-
        A human readable explanation specific to this occurrence of the
        problem.
      example: There was an error processing the request
    instance:
      type: string
      description: |-
        An absolute URI that identifies the specific occurrence of the problem.
        It may or may not yield further information if dereferenced.
      format: uri
NotificationChannel:
  type: string
  description: All notification channels.
  example: EMAIL
  x-extensible-enum:
  - EMAIL
  - WEBHOOK
BlockedInboxOrChannel:
  type: string
  description: |-
    All notification channels plus the message inbox.
    These represent all the possible channels a user could block.
  example: INBOX
  x-extensible-enum:
  - EMAIL
  - INBOX
  - WEBHOOK
NotificationChannelStatusValue:
  type: string
  description: |-
    The status of a notification (one for each channel).
    "SENT": the notification was succesfully sent to the channel (ie. email or push notification)
    "THROTTLED": a temporary failure caused a retry during the notification processing;
      the notification associated with this channel will be delayed for a maximum of 7 days or until the message expires
    "EXPIRED": the message expired before the notification could be sent;
      this means that the maximum message time to live was reached; no notification will be sent to this channel
    "FAILED": a permanent failure caused the process to exit with an error, no notification will be sent to this channel
  example: SENT
  x-extensible-enum:
  - SENT
  - THROTTLED
  - EXPIRED
  - FAILED
NotificationChannelStatus:
  required:
  - channel
  - status
  - updated_at
  type: object
  properties:
    channel:
      $ref: '#/NotificationChannel'
    status:
      $ref: '#/NotificationChannelStatusValue'
    updated_at:
      $ref: '#/Timestamp'
    version:
      type: integer
MessageContentBase:
  required:
  - markdown
  - subject
  type: object
  properties:
    subject:
      $ref: '#/MessageSubject'
    markdown:
      $ref: '#/MessageBodyMarkdown'
    require_secure_channels:
      type: boolean
      description: When true, messages won't trigger email notifications (only
        push).
MessageContent:
  allOf:
  - $ref: '#/MessageContentBase'
  - type: object
    properties:
      payment_data:
        $ref: '#/PaymentData'
      prescription_data:
        $ref: '#/PrescriptionData'
      legal_data:
        $ref: '#/LegalData'
      eu_covid_cert:
        $ref: '#/EUCovidCert'
      third_party_data:
        $ref: '#/ThirdPartyData'
      due_date:
        $ref: '#/Timestamp'
NewMessageContent:
  allOf:
  - $ref: '#/MessageContentBase'
  - type: object
    properties:
      payment_data:
        $ref: '#/PaymentDataWithRequiredPayee'
      due_date:
        $ref: '#/Timestamp'
      prescription_data:
        $ref: '#/PrescriptionData'
      eu_covid_cert:
        $ref: '#/EUCovidCert'
      third_party_data:
        $ref: '#/ThirdPartyData'
      legal_data:
        $ref: '#/LegalData'
NewMessage:
  required:
  - content
  type: object
  properties:
    time_to_live:
      $ref: '#/TimeToLiveSeconds'
    content:
      $ref: '#/MessageContent'
    default_addresses:
      $ref: '#/NewMessageDefaultAddresses'
    fiscal_code:
      $ref: '#/FiscalCode'
    feature_level_type:
      $ref: '#/FeatureLevelType'
FeatureLevelType:
  type: string
  example: STANDARD
  default: STANDARD
  x-extensible-enum:
  - STANDARD
  - ADVANCED
PrescriptionData:
  required:
  - nre
  type: object
  properties:
    nre:
      $ref: '#/PrescriptionNRE'
    iup:
      $ref: '#/PrescriptionIUP'
    prescriber_fiscal_code:
      $ref: '#/PrescriberFiscalCode'
  description: Metadata needed to process medical prescriptions.
LegalData:
  required:
  - has_attachment
  - message_unique_id
  - sender_mail_from
  type: object
  properties:
    sender_mail_from:
      minLength: 1
      type: string
    has_attachment:
      type: boolean
      default: false
    message_unique_id:
      minLength: 1
      type: string
    original_message_url:
      minLength: 1
      type: string
    pec_server_service_id:
      $ref: '#/ServiceId'
ThirdPartyData:
  required:
  - id
  type: object
  properties:
    id:
      minLength: 1
      type: string
      description: Unique id for retrieving third party enriched information about
        the message
    original_sender:
      minLength: 1
      type: string
      description: Either a ServiceId or a simple string representing the sender
        name
    original_receipt_date:
      $ref: '#/Timestamp'
    has_attachments:
      type: boolean
      default: false
    has_precondition:
      type: string
      x-extensible-enum:
      - ALWAYS
      - ONCE
      - NEVER
    summary:
      minLength: 1
      type: string
  description: Payload containing all information needed to retrieve and visualize
    third party message details
EUCovidCert:
  required:
  - auth_code
  type: object
  properties:
    auth_code:
      type: string
  description: Paylod with access token to retrieve a EU Covid Certificate
PrescriptionIUP:
  maxLength: 16
  minLength: 1
  type: string
  description: The field *Identificativo Unico di Prescrizione* identifies the
    medical prescription at regional level.
PrescriptionNRE:
  maxLength: 15
  minLength: 15
  type: string
  description: The field *Numero ricetta elettronica* identifies the medical prescription
    at national level.
Payee:
  required:
  - fiscal_code
  type: object
  properties:
    fiscal_code:
      $ref: '#/OrganizationFiscalCode'
  description: Metadata needed to explicit payment's payee.
PaymentDataBase:
  required:
  - amount
  - notice_number
  type: object
  properties:
    amount:
      $ref: '#/PaymentAmount'
    notice_number:
      $ref: '#/PaymentNoticeNumber'
    invalid_after_due_date:
      type: boolean
      default: false
  description: Metadata needed to process pagoPA payments.
PaymentData:
  allOf:
  - $ref: '#/PaymentDataBase'
  - type: object
    properties:
      payee:
        $ref: '#/Payee'
PaymentDataWithRequiredPayee:
  allOf:
  - $ref: '#/PaymentDataBase'
  - required:
    - payee
    type: object
    properties:
      payee:
        $ref: '#/Payee'
PaymentNoticeNumber:
  pattern: ^[0123][0-9]{17}$
  type: string
  description: The field ["Numero Avviso"](https://pagopa-specifichepagamenti.readthedocs.io/it/latest/_docs/Capitolo7.html#il-numero-avviso-e-larchivio-dei-pagamenti-in-attesa)
    of pagoPa, needed to identify the payment. Format is `<aux digit (1n)>[<application
    code> (2n)]<codice IUV (15|17n)>`. See [pagoPa specs](https://www.agid.gov.it/sites/default/files/repository_files/specifiche_attuative_pagamenti_1_3_1_0.pdf)
    for more info on this field and the IUV.
PaymentAmount:
  maximum: 9999999999
  minimum: 1
  type: integer
  description: Amount of payment in euro cent. PagoPA accepts up to 9999999999
    euro cents.
MaxAllowedPaymentAmount:
  maximum: 9999999999
  minimum: 0
  type: integer
  description: Maximum amount in euro cents that a service is allowed to charge
    to a user.
  default: 0
RejectedMessageStatusValue:
  type: string
  x-extensible-enum:
  - REJECTED
RejectionReason:
  type: string
  x-extensible-enum:
  - SERVICE_NOT_ALLOWED
  - USER_NOT_FOUND
  - UNKNOWN
NotRejectedMessageStatusValue:
  type: string
  x-extensible-enum:
  - ACCEPTED
  - THROTTLED
  - FAILED
  - PROCESSED
MessageStatusValue:
  description: |-
    The processing status of a message.
    "ACCEPTED": the message has been accepted and will be processed for delivery;
      we'll try to store its content in the user's inbox and notify him on his preferred channels
    "THROTTLED": a temporary failure caused a retry during the message processing;
      any notification associated with this message will be delayed for a maximum of 7 days
    "FAILED": a permanent failure caused the process to exit with an error, no notification will be sent for this message
    "PROCESSED": the message was succesfully processed and is now stored in the user's inbox;
      we'll try to send a notification for each of the selected channels
    "REJECTED": either the recipient does not exist, or the sender has been blocked
  allOf:
  - $ref: '#/RejectedMessageStatusValue'
  - $ref: '#/NotRejectedMessageStatusValue'
  x-one-of: true
MessageStatus:
  required:
  - status
  - updated_at
  type: object
  properties:
    status:
      $ref: '#/MessageStatusValue'
    updated_at:
      $ref: '#/Timestamp'
    version:
      type: integer
MessageStatusWithAttributes:
  allOf:
  - $ref: '#/MessageStatus'
  - $ref: '#/MessageStatusAttributes'
CreatedMessageWithContent:
  required:
  - content
  - created_at
  - fiscal_code
  - id
  - sender_service_id
  type: object
  properties:
    id:
      type: string
    fiscal_code:
      $ref: '#/FiscalCode'
    time_to_live:
      $ref: '#/TimeToLiveSeconds'
    created_at:
      $ref: '#/Timestamp'
    content:
      $ref: '#/NewMessageContent'
    sender_service_id:
      $ref: '#/ServiceId'
CreatedMessageWithoutContent:
  required:
  - created_at
  - fiscal_code
  - id
  - sender_service_id
  type: object
  properties:
    id:
      type: string
    fiscal_code:
      $ref: '#/FiscalCode'
    time_to_live:
      $ref: '#/TimeToLiveSeconds'
    created_at:
      $ref: '#/Timestamp'
    sender_service_id:
      $ref: '#/ServiceId'
BaseEnrichedMessage:
  required:
  - created_at
  - fiscal_code
  - id
  - message_title
  - organization_name
  - sender_service_id
  - service_name
  type: object
  properties:
    id:
      type: string
    fiscal_code:
      $ref: '#/FiscalCode'
    time_to_live:
      $ref: '#/TimeToLiveSeconds'
    created_at:
      $ref: '#/Timestamp'
    sender_service_id:
      $ref: '#/ServiceId'
    service_name:
      type: string
    organization_name:
      type: string
    message_title:
      type: string
    category:
      $ref: '#/MessageCategory'
    has_attachments:
      type: boolean
      default: false
    has_precondition:
      type: boolean
      default: false
EnrichedMessage:
  allOf:
  - $ref: '#/BaseEnrichedMessage'
  - $ref: '#/MessageStatusAttributes'
ExternalCreatedMessageWithoutContent:
  allOf:
  - $ref: '#/CreatedMessageWithoutContent'
  - required:
    - feature_level_type
    type: object
    properties:
      feature_level_type:
        $ref: '#/FeatureLevelType'
ExternalCreatedMessageWithContent:
  allOf:
  - $ref: '#/CreatedMessageWithContent'
  - required:
    - feature_level_type
    type: object
    properties:
      feature_level_type:
        $ref: '#/FeatureLevelType'
ExternalMessageResponseWithoutContent:
  required:
  - message
  type: object
  properties:
    message:
      $ref: '#/ExternalCreatedMessageWithoutContent'
    notification:
      $ref: '#/MessageResponseNotificationStatus'
    status:
      $ref: '#/MessageStatusValue'
    read_status:
      $ref: '#/ReadStatus'
    payment_status:
      $ref: '#/PaymentStatus'
ExternalMessageResponseWithContent:
  required:
  - message
  type: object
  properties:
    message:
      $ref: '#/ExternalCreatedMessageWithContent'
    notification:
      $ref: '#/MessageResponseNotificationStatus'
    status:
      $ref: '#/MessageStatusValue'
    read_status:
      $ref: '#/ReadStatus'
    payment_status:
      $ref: '#/PaymentStatus'
PublicMessage:
  allOf:
  - $ref: '#/EnrichedMessage'
  - $ref: '#/CreatedMessageWithoutContent'
  x-one-of: true
MessageResponseNotificationStatus:
  type: object
  properties:
    email:
      $ref: '#/NotificationChannelStatusValue'
    webhook:
      $ref: '#/NotificationChannelStatusValue'
CreatedMessageWithContentAndEnrichedData:
  allOf:
  - $ref: '#/CreatedMessageWithContent'
  - $ref: '#/EnrichedMessage'
CreatedMessageWithContentResponse:
  allOf:
  - $ref: '#/CreatedMessageWithContent'
  - $ref: '#/CreatedMessageWithContentAndEnrichedData'
  x-one-of: true
InternalMessageResponseWithContent:
  required:
  - message
  type: object
  properties:
    message:
      $ref: '#/CreatedMessageWithContentResponse'
    status:
      $ref: '#/MessageStatusValue'
MessageResponseWithContent:
  required:
  - message
  type: object
  properties:
    message:
      $ref: '#/CreatedMessageWithContent'
    notification:
      $ref: '#/MessageResponseNotificationStatus'
    status:
      $ref: '#/MessageStatusValue'
LegalMessageWithContent:
  allOf:
  - $ref: '#/CreatedMessageWithContent'
  - required:
    - legal_message
    type: object
    properties:
      legal_message:
        $ref: '#/LegalMessage'
LegalMessageResponseWithContent:
  allOf:
  - $ref: '#/MessageResponseWithContent'
  - required:
    - message
    type: object
    properties:
      message:
        $ref: '#/LegalMessageWithContent'
ThirdPartyMessageWithContent:
  allOf:
  - $ref: '#/CreatedMessageWithContent'
  - required:
    - third_party_message
    type: object
    properties:
      third_party_message:
        $ref: '#/ThirdPartyMessage'
ThirdPartyMessagePrecondition:
  title: ThirdPartyMessagePrecondition
  required:
  - markdown
  - title
  type: object
  properties:
    title:
      type: string
    markdown:
      type: string
  description: Describes a message precondition
MessageResponseWithoutContent:
  required:
  - message
  type: object
  properties:
    message:
      $ref: '#/CreatedMessageWithoutContent'
    notification:
      $ref: '#/MessageResponseNotificationStatus'
    status:
      $ref: '#/MessageStatusValue'
FiscalCode:
  type: string
  description: User's fiscal code.
  format: FiscalCode
  example: SPNDNL80R13C555X
  x-import: '@pagopa/ts-commons/lib/strings'
PrescriberFiscalCode:
  type: string
  description: Fiscal code of the Doctor that made the prescription.
  format: FiscalCode
  example: TCNZRO80R13C555Y
  x-import: '@pagopa/ts-commons/lib/strings'
SandboxFiscalCode:
  type: string
  description: Sandbox user's fiscal code (used for development).
  format: SandboxFiscalCode
  example: SPNDNL80A13Y555X
  x-import: '@pagopa/ts-commons/lib/strings'
OrganizationFiscalCode:
  type: string
  description: Organization fiscal code.
  format: OrganizationFiscalCode
  example: "12345678901"
  x-import: '@pagopa/ts-commons/lib/strings'
MessageSubject:
  maxLength: 120
  minLength: 10
  type: string
  description: |-
    The (optional) subject of the message - note that only some notification
    channels support the display of a subject. When a subject is not provided,
    one gets generated from the client attributes.
  example: Welcome new user !
MessageBodyMarkdown:
  maxLength: 10000
  minLength: 80
  type: string
  description: |-
    The full version of the message, in plain text or Markdown format. The
    content of this field will be delivered to channels that don't have any
    limit in terms of content size (e.g. email, etc...).
  example: |-
    # This is a markdown header

    to show how easily markdown can be converted to **HTML**

    Remember: this has to be a long text.
PaginationResponse:
  type: object
  properties:
    prev:
      type: string
      description: Contains a value useful to get the previous page
      example: first_id_of_the_page
    next:
      type: string
      description: Contains a value useful to get the next page
      example: last_id_of_the_page
  description: Pagination response parameters.
CreatedMessageWithoutContentCollection:
  required:
  - items
  type: object
  properties:
    items:
      type: array
      items:
        $ref: '#/CreatedMessageWithoutContent'
  description: A collection of messages
PaginatedCreatedMessageWithoutContentCollection:
  description: A paginated collection of messages
  allOf:
  - $ref: '#/CreatedMessageWithoutContentCollection'
  - $ref: '#/PaginationResponse'
PublicMessagesCollection:
  required:
  - items
  type: object
  properties:
    items:
      type: array
      items:
        $ref: '#/PublicMessage'
  description: A collection of messages
PaginatedPublicMessagesCollection:
  description: A paginated collection of messages
  allOf:
  - $ref: '#/PublicMessagesCollection'
  - $ref: '#/PaginationResponse'
BlockedInboxOrChannels:
  type: object
  additionalProperties:
    type: array
    items:
      $ref: '#/BlockedInboxOrChannel'
  description: |-
    All the notification channels blocked by the user.
    Each channel is related to a specific service (sender).
NewProfile:
  required:
  - is_email_validated
  type: object
  properties:
    email:
      $ref: '#/EmailAddress'
    is_email_validated:
      $ref: '#/IsEmailValidated'
    is_test_profile:
      $ref: '#/IsTestProfile'
  description: |-
    Describes a new citizen's profile.
    Used for profile creation.
Profile:
  required:
  - version
  type: object
  properties:
    email:
      $ref: '#/EmailAddress'
    service_preferences_settings:
      $ref: '#/ServicePreferencesSettings'
    blocked_inbox_or_channels:
      $ref: '#/BlockedInboxOrChannels'
    preferred_languages:
      $ref: '#/PreferredLanguages'
    is_inbox_enabled:
      $ref: '#/IsInboxEnabled'
    accepted_tos_version:
      $ref: '#/AcceptedTosVersion'
    is_webhook_enabled:
      $ref: '#/IsWebhookEnabled'
    is_email_enabled:
      $ref: '#/IsEmailEnabled'
    reminder_status:
      $ref: '#/ReminderStatus'
    last_app_version:
      $ref: '#/AppVersion'
    push_notifications_content_type:
      $ref: '#/PushNotificationsContentType'
    version:
      type: integer
  description: |-
    Describes the citizen's profile.
    Used for profile update.
LimitedProfile:
  required:
  - sender_allowed
  type: object
  properties:
    sender_allowed:
      type: boolean
      description: |-
        True in case the service that made the request can send
        messages to the user identified by this profile (false otherwise).
    preferred_languages:
      $ref: '#/PreferredLanguages'
  description: |-
    Describes the citizen's profile, mostly interesting for preferences
    attributes.
ExtendedProfile:
  required:
  - is_email_enabled
  - is_email_validated
  - is_inbox_enabled
  - is_webhook_enabled
  - service_preferences_settings
  - version
  type: object
  properties:
    email:
      $ref: '#/EmailAddress'
    service_preferences_settings:
      $ref: '#/ServicePreferencesSettings'
    blocked_inbox_or_channels:
      $ref: '#/BlockedInboxOrChannels'
    preferred_languages:
      $ref: '#/PreferredLanguages'
    is_inbox_enabled:
      $ref: '#/IsInboxEnabled'
    accepted_tos_version:
      $ref: '#/AcceptedTosVersion'
    is_webhook_enabled:
      $ref: '#/IsWebhookEnabled'
    is_email_enabled:
      $ref: '#/IsEmailEnabled'
    is_email_validated:
      $ref: '#/IsEmailValidated'
    reminder_status:
      $ref: '#/ReminderStatus'
    is_test_profile:
      $ref: '#/IsTestProfile'
    last_app_version:
      $ref: '#/AppVersion'
    push_notifications_content_type:
      $ref: '#/PushNotificationsContentType'
    version:
      type: integer
  description: |-
    Describes the citizen's profile, mostly interesting for preferences
    attributes.
IsEmailValidated:
  type: boolean
  description: True if the user email has been validated.
IsInboxEnabled:
  type: boolean
  description: |-
    True if the recipient of a message wants to store its content for
    later retrieval.
AcceptedTosVersion:
  minimum: 1
  type: number
  description: Version of latest terms of service accepted by the user.
IsWebhookEnabled:
  type: boolean
  description: True if the recipient of a message wants to forward the notifications
    to the default webhook.
IsEmailEnabled:
  type: boolean
  description: True if the recipient of a message wants to forward the notifications
    to his email address.
ReminderStatus:
  type: string
  description: Api definition of reminder opt-in status
  example: ENABLED
  x-extensible-enum:
  - ENABLED
  - DISABLED
IsTestProfile:
  type: boolean
  description: True if the user's profile is only for test purpose.
  default: false
AppVersion:
  pattern: ^((0|[1-9]\\d*)\\.){2}(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){0,1}$
  type: string
  description: A string field in Semantic Versioning format
  example: 1.10.11
PushNotificationsContentType:
  type: string
  description: |-
    This parameter specifies how a specific user wants to visualize push notifications.
    FULL leads to descriptive push notifications while ANONYMOUS leads to silent ones.
  example: FULL
  x-extensible-enum:
  - FULL
  - ANONYMOUS
TimeToLiveSeconds:
  maximum: 6.048E+5
  minimum: 3.6E+3
  type: integer
  description: |-
    This parameter specifies for how long (in seconds) the system will
    try to deliver the message to the channels configured by the user.
  example: 3600
  default: 3600
HttpStatusCode:
  maximum: 6E+2
  exclusiveMaximum: true
  minimum: 1E+2
  type: integer
  description: |-
    The HTTP status code generated by the origin server for this occurrence
    of the problem.
  format: int32
  example: 200
NewMessageDefaultAddresses:
  type: object
  properties:
    email:
      $ref: '#/EmailAddress'
  description: |-
    Default addresses for notifying the recipient of the message in case
    no address for the related channel is set in his profile.
EmailAddress:
  type: string
  format: email
  example: foobar@example.com
PreferredLanguage:
  type: string
  example: it_IT
  x-extensible-enum:
  - it_IT
  - en_GB
  - es_ES
  - de_DE
  - fr_FR
PreferredLanguages:
  type: array
  description: |-
    Indicates the User's preferred written or spoken languages in order
    of preference. Generally used for selecting a localized User interface. Valid
    values are concatenation of the ISO 639-1 two letter language code, an underscore,
    and the ISO 3166-1 2 letter country code; e.g., 'en_US' specifies the language
    English and country US.
  items:
    $ref: '#/PreferredLanguage'
SenderMetadata:
  title: Sender metadata
  required:
  - department_name
  - organization_name
  - service_name
  type: object
  properties:
    service_name:
      $ref: '#/ServiceName'
    organization_name:
      $ref: '#/OrganizationName'
    department_name:
      $ref: '#/DepartmentName'
  description: Metadata associated to a sender (service).
ServicePayload:
  description: A payload used to create/update a service for a user.
  allOf:
  - $ref: '#/VisibleServicePayload'
  - $ref: '#/HiddenServicePayload'
  x-one-of: true
ExtendedServicePayload:
  allOf:
  - $ref: '#/ServicePayload'
  - type: object
    properties:
      service_metadata:
        $ref: '#/ServiceMetadata'
CommonServicePayload:
  required:
  - authorized_cidrs
  - department_name
  - organization_fiscal_code
  - organization_name
  - service_name
  type: object
  properties:
    service_name:
      $ref: '#/ServiceName'
    department_name:
      $ref: '#/DepartmentName'
    organization_name:
      $ref: '#/OrganizationName'
    organization_fiscal_code:
      $ref: '#/OrganizationFiscalCode'
    authorized_cidrs:
      type: array
      description: |-
        Allowed source IPs or CIDRs for this service.
        When empty, every IP address it's authorized to call the IO API on behalf of the service.
      items:
        $ref: '#/CIDR'
    version:
      type: integer
    require_secure_channels:
      type: boolean
      description: When true, messages won't trigger email notifications (only
        push).
      default: false
  description: Common properties for a ServicePayload
VisibleServicePayload:
  description: A payload used to create/update a service that appears in the service
    list.
  allOf:
  - $ref: '#/CommonServicePayload'
  - required:
    - is_visible
    - service_metadata
    type: object
    properties:
      is_visible:
        type: boolean
        description: It indicates that service appears in the service list
      service_metadata:
        $ref: '#/CommonServiceMetadata'
HiddenServicePayload:
  description: A payload used to create/update a service that is hidden.
  allOf:
  - $ref: '#/CommonServicePayload'
  - type: object
    properties:
      is_visible:
        type: boolean
        description: It indicates that service is hidden
        default: false
        enum:
          - false
      service_metadata:
        $ref: '#/CommonServiceMetadata'
Service:
  description: A service tied to user's subscription.
  allOf:
  - $ref: '#/ExtendedServicePayload'
  - required:
    - authorized_recipients
    - service_id
    type: object
    properties:
      id:
        type: string
      service_id:
        $ref: '#/ServiceId'
      authorized_recipients:
        type: array
        description: |-
          If non empty, the service will be able
          to send messages only to these fiscal codes.
        items:
          $ref: '#/FiscalCode'
      max_allowed_payment_amount:
        $ref: '#/MaxAllowedPaymentAmount'
CommonServiceMetadata:
  required:
  - scope
  type: object
  properties:
    description:
      minLength: 1
      type: string
    web_url:
      minLength: 1
      type: string
    app_ios:
      minLength: 1
      type: string
    app_android:
      minLength: 1
      type: string
    tos_url:
      minLength: 1
      type: string
    privacy_url:
      minLength: 1
      type: string
    address:
      minLength: 1
      type: string
    phone:
      minLength: 1
      type: string
    email:
      minLength: 1
      type: string
    pec:
      minLength: 1
      type: string
    cta:
      minLength: 1
      type: string
    token_name:
      minLength: 1
      type: string
    support_url:
      minLength: 1
      type: string
    scope:
      $ref: '#/ServiceScope'
  description: A set of metadata properties related to this service.
StandardServiceMetadata:
  allOf:
  - $ref: '#/CommonServiceMetadata'
  - required:
    - category
    type: object
    properties:
      category:
        $ref: '#/StandardServiceCategory'
SpecialServiceMetadata:
  allOf:
  - $ref: '#/CommonServiceMetadata'
  - required:
    - category
    type: object
    properties:
      category:
        $ref: '#/SpecialServiceCategory'
      custom_special_flow:
        minLength: 1
        type: string
ServiceMetadata:
  allOf:
  - $ref: '#/StandardServiceMetadata'
  - $ref: '#/SpecialServiceMetadata'
  - $ref: '#/CommonServiceMetadata'
  x-one-of: true
SpecialServiceCategory:
  type: string
  x-extensible-enum:
  - SPECIAL
StandardServiceCategory:
  type: string
  x-extensible-enum:
  - STANDARD
ServiceCategory:
  allOf:
  - $ref: '#/SpecialServiceCategory'
  - $ref: '#/StandardServiceCategory'
  x-one-of: true
ServiceScope:
  type: string
  x-extensible-enum:
  - NATIONAL
  - LOCAL
ServiceTupleCollection:
  required:
  - items
  type: object
  properties:
    items:
      type: array
      items:
        $ref: '#/ServiceTuple'
  description: A collection of services tuples (service and version)
PaginatedServiceTupleCollection:
  description: A paginated collection of services tuples
  allOf:
  - $ref: '#/ServiceTupleCollection'
  - $ref: '#/PaginationResponse'
ServicePublic:
  title: Service (public)
  required:
  - department_name
  - organization_fiscal_code
  - organization_name
  - service_id
  - service_name
  - version
  type: object
  properties:
    service_id:
      $ref: '#/ServiceId'
    service_name:
      $ref: '#/ServiceName'
    organization_name:
      $ref: '#/OrganizationName'
    department_name:
      $ref: '#/DepartmentName'
    organization_fiscal_code:
      $ref: '#/OrganizationFiscalCode'
    available_notification_channels:
      $ref: '#/AvailableNotificationChannels'
    version:
      type: integer
    service_metadata:
      $ref: '#/ServiceMetadata'
  description: A Service associated to an user's subscription.
ServiceId:
  minLength: 1
  type: string
  description: |-
    The ID of the Service. Equals the subscriptionId of a registered
    API user.
ServiceTuple:
  required:
  - service_id
  - version
  type: object
  properties:
    service_id:
      $ref: '#/ServiceId'
    scope:
      $ref: '#/ServiceScope'
    version:
      type: integer
  description: Service identifier and version used to return list of services.
UserDataProcessing:
  required:
  - choice
  - status
  - version
  type: object
  properties:
    choice:
      $ref: '#/UserDataProcessingChoice'
    status:
      $ref: '#/UserDataProcessingStatus'
    created_at:
      $ref: '#/Timestamp'
    updated_at:
      $ref: '#/Timestamp'
    version:
      type: integer
  description: A representation of a single user data processing request
ServiceName:
  minLength: 1
  type: string
  description: The name of the service. Will be added to the content of sent messages.
OrganizationName:
  minLength: 1
  type: string
  description: |-
    The organization that runs the service. Will be added to the content
    of sent messages to identify the sender.
DepartmentName:
  minLength: 1
  type: string
  description: |-
    The department inside the organization that runs the service. Will
    be added to the content of sent messages.
AvailableNotificationChannels:
  type: array
  description: All the notification channels available for a service.
  items:
    $ref: '#/NotificationChannel'
CIDR:
  pattern: ^([0-9]{1,3}[.]){3}[0-9]{1,3}(/([0-9]|[1-2][0-9]|3[0-2]))?$
  type: string
  description: Describes a single IP or a range of IPs.
Timestamp:
  type: string
  description: A date-time field in ISO-8601 format and UTC timezone.
  format: UTCISODateFromString
  example: 2018-10-13T00:00:00.000Z
  x-import: '@pagopa/ts-commons/lib/dates'
HttpsUrl:
  pattern: ^https://[-a-zA-Z0-9@:%._+~#=]{2,256}[.][a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$
  type: string
  description: An http(s) url.
  format: uri
UserDataProcessingStatus:
  type: string
  description: The status of a user data processing request
  example: PENDING
  enum:
  - PENDING
  - WIP
  - CLOSED
  - FAILED
  - ABORTED
UserDataProcessingChoice:
  type: string
  description: User's choice to delete or download his own data.
  example: DOWNLOAD
  enum:
  - DOWNLOAD
  - DELETE
UserDataProcessingChoiceRequest:
  required:
  - choice
  type: object
  properties:
    choice:
      $ref: '#/UserDataProcessingChoice'
  description: A request wrapper for User data processing choice
ServicePreferencesSettings:
  required:
  - mode
  type: object
  properties:
    mode:
      $ref: '#/ServicesPreferencesMode'
  description: |-
    Describes the citizen's profile, mostly interesting for preferences
    attributes.
ServicesPreferencesMode:
  type: string
  enum:
  - LEGACY
  - AUTO
  - MANUAL
BasicServicePreference:
  required:
  - is_email_enabled
  - is_inbox_enabled
  - is_webhook_enabled
  - settings_version
  type: object
  properties:
    is_email_enabled:
      type: boolean
    is_inbox_enabled:
      type: boolean
    is_webhook_enabled:
      type: boolean
    settings_version:
      minimum: 0
      type: integer
  description: |-
    Define a set of required preferences of a Citizen for a given Service.
    It's needed by Citizens to express how they want Services to get in touch with them.
ServicePreference:
  description: |-
    Return the set of preferences of a Citizen for a given Service.
    It's needed by Citizens to read previoulsy expressed preferences.
  allOf:
  - $ref: '#/BasicServicePreference'
  - required:
    - can_access_message_read_status
    type: object
    properties:
      can_access_message_read_status:
        type: boolean
UpsertServicePreference:
  description: |-
    Define a set of preferences of a Citizen for a given Service.
    Extends the BasicServicePreference with new optional preferences for backward compatibility.
  allOf:
  - $ref: '#/BasicServicePreference'
  - type: object
    properties:
      can_access_message_read_status:
        type: boolean
ActivationStatus:
  type: string
  x-extensible-enum:
  - ACTIVE
  - INACTIVE
  - PENDING
Activation:
  required:
  - fiscal_code
  - service_id
  - status
  - version
  type: object
  properties:
    service_id:
      $ref: '#/ServiceId'
    fiscal_code:
      $ref: '#/FiscalCode'
    status:
      $ref: '#/ActivationStatus'
    version:
      minimum: 0
      type: integer
ActivationPayload:
  required:
  - fiscal_code
  - status
  type: object
  properties:
    fiscal_code:
      $ref: '#/FiscalCode'
    status:
      $ref: '#/ActivationStatus'
MessageCategory:
  allOf:
  - $ref: '#/MessageCategoryPayment'
  - $ref: '#/MessageCategoryBase'
  - $ref: '#/MessageCategoryPN'
  x-one-of: true
MessageCategoryBase:
  required:
  - tag
  type: object
  properties:
    tag:
      type: string
      enum:
      - LEGAL_MESSAGE
      - EU_COVID_CERT
      - GENERIC
MessageCategoryPayment:
  required:
  - rptId
  - tag
  type: object
  properties:
    tag:
      type: string
      enum:
      - PAYMENT
    rptId:
      type: string
MessageCategoryPN:
  allOf:
  - $ref: '#/ThirdPartyData'
  - required:
    - tag
    type: object
    properties:
      tag:
        type: string
        enum:
        - PN
LegalMessage:
  required:
  - cert_data
  - eml
  type: object
  properties:
    eml:
      $ref: '#/LegalMessageEml'
    cert_data:
      $ref: '#/LegalMessageCertData'
LegalMessageEml:
  required:
  - attachments
  - html_content
  - plain_text_content
  - subject
  type: object
  properties:
    subject:
      type: string
    plain_text_content:
      type: string
    html_content:
      type: string
    attachments:
      type: array
      items:
        $ref: '#/Attachment'
LegalMessageCertData:
  required:
  - data
  - header
  type: object
  properties:
    header:
      $ref: '#/CertDataHeader'
    data:
      $ref: '#/CertData'
CertData:
  required:
  - envelope_id
  - msg_id
  - receipt_type
  - sender_provider
  - timestamp
  type: object
  properties:
    sender_provider:
      minLength: 1
      type: string
    timestamp:
      type: string
      format: date-time
    envelope_id:
      minLength: 1
      type: string
    msg_id:
      minLength: 1
      type: string
    receipt_type:
      type: string
CertDataHeader:
  required:
  - recipients
  - sender
  type: object
  properties:
    sender:
      minLength: 1
      type: string
    recipients:
      minLength: 1
      type: string
    replies:
      minLength: 1
      type: string
    object:
      minLength: 1
      type: string
Attachment:
  required:
  - content_type
  - id
  - name
  type: object
  properties:
    id:
      type: string
    content_type:
      type: string
    name:
      type: string
    url:
      type: string
ImpersonatedService:
  required:
  - service_id
  - user_email
  - user_groups
  type: object
  properties:
    service_id:
      type: string
    user_groups:
      type: string
    user_email:
      type: string
ThirdPartyMessage:
  type: object
  properties:
    attachments:
      type: array
      items:
        $ref: '#/ThirdPartyAttachment'
    details:
      type: object
      additionalProperties: true
ThirdPartyAttachment:
  required:
  - id
  - url
  type: object
  properties:
    id:
      minLength: 1
      type: string
    content_type:
      minLength: 1
      type: string
    name:
      minLength: 1
      type: string
    url:
      minLength: 1
      type: string
    category:
      type: string
      default: DOCUMENT
MessageStatusReadingChange:
  required:
  - change_type
  - is_read
  type: object
  properties:
    change_type:
      type: string
      enum:
      - reading
    is_read:
      type: boolean
      enum:
        - true
MessageStatusArchivingChange:
  required:
  - change_type
  - is_archived
  type: object
  properties:
    change_type:
      type: string
      enum:
      - archiving
    is_archived:
      type: boolean
MessageStatusBulkChange:
  required:
  - change_type
  - is_archived
  type: object
  properties:
    change_type:
      type: string
      enum:
      - bulk
    is_archived:
      type: boolean
    is_read:
      type: boolean
      enum:
        - true
MessageStatusChange:
  allOf:
  - $ref: '#/MessageStatusReadingChange'
  - $ref: '#/MessageStatusArchivingChange'
  - $ref: '#/MessageStatusBulkChange'
  x-one-of: true
MessageStatusAttributes:
  required:
  - is_archived
  - is_read
  type: object
  properties:
    is_read:
      type: boolean
      default: false
    is_archived:
      type: boolean
      default: false
PaymentStatus:
  type: string
  description: Payment status enumeration
  example: NOT_PAID
  x-extensible-enum:
  - PAID
  - NOT_PAID
ReadStatus:
  type: string
  description: Api definition of read status enumeration
  example: UNREAD
  x-extensible-enum:
  - UNAVAILABLE
  - UNREAD
  - READ
Ulid:
  type: string
  description: Ulid string.
  format: Ulid
  example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
  x-import: '@pagopa/ts-commons/lib/strings'
PathTraversalSafePathParam:
  pattern: ^[0-9a-zA-Z\-\._\/+]+$
  type: string
  description: A non empty string that is safe to be used in an url parameter
    to avoid path traversal attacks
