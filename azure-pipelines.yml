# Azure DevOps pipeline to build, check source codes, run tests, and deploy.
#
# To enable the check of source code with Danger JS you need to configure a valid
# GitHub token by setting the following variable: 
# - DANGER_GITHUB_API_TOKEN
#
# The deployment can only be triggered by a manual run of the pipeline and consists 
# in publishing a new version of the package 'io-functions-commons' to the NPM 
# registry and create a corresponding release in GitHub. To enable the deployment 
# you need to set to true the following variable otherwise the job to release the 
# package will be skipped:
# - ENABLE_MANUAL_DEPLOY = true
#
# The following variable needs to be used for specifying the increment "major", "minor", 
# "patch", or "pre*" version of the package to be published (you could also directly 
# specify the version; e.g. "4.2.1"):
# - PACKAGE_VERSION
# 
# To publish a Release to the GitHub repository you need to specify in the following 
# variable a personal access token (with scope "public_repo") for a GitHub user who 
# is a 'collaborator' of the repository "pagopa/io-functions-commons":
# - GITHUB_TOKEN
#
# To publish the package to the NPM registry you also need to set an auth token (with 
# "read and publish" access level) for a NPM user who is 'collaborator' of public package 
# "io-functions-commons": 
# - NPM_TOKEN
#

variables:
  NODE_VERSION: '10.14.1'
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn

# This pipeline can be manually run or is automatically triggered whenever one 
# of the following conditions is true:
# - a push is made to any branch in the repository (not only 'master')
# - a pull request is created
# - a tag named 'latest' is pushed
# Note. In the last case, the tag can be (re-)created using the Git CLI, e.g.:
#    git push -f origin <abfb967>:refs/tags/latest
trigger:
  branches:
    include:
      - '*'
      - refs/tags/latest

# This pipeline has been implemented to be run on hosted agent pools based both
# on 'windows' and 'ubuntu' virtual machine images and using the scripts defined
# in the package.json file. Since we are deploying on Azure Web app on Windows
# runtime, the pipeline is currently configured to use a Windows hosted image for
# verifying the build and deploying, and Linux OS for all other jobs for faster 
# execution.
pool:
  vmImage: 'ubuntu-latest'

stages:
  # A) Build and code validation (always run)
  - stage: Build
    dependsOn: []
    jobs:
      # A1) Checkout, install module and build code (use Windows OS)
      - job: make_build
        pool:
          vmImage: 'windows-2019'
        steps:
          - template: azure-templates/make-build-steps.yml
            parameters:
              make: build
            
      # A2) Analyze source code to find errors with lint
      - job: lint
        steps:
          - template: azure-templates/make-build-steps.yml
            parameters:
              make: install_dependencies

          - script: |
              yarn lint
            displayName: 'Lint'

      # A3) Validate API definitions
      - job: lint_api
        steps:
          - task: UseNode@1
            inputs:
              version: $(NODE_VERSION)
            displayName: 'Set up Node.js'

          - bash: |
              npx oval validate -p openapi/index.yaml
            displayName: 'Validate openAPI'

      # A4) Check source code with danger (ignore when master)
      - job: danger
        condition: and(succeeded(),
            and(
              variables['DANGER_GITHUB_API_TOKEN'], 
              ne(variables['Build.SourceBranch'], 'refs/heads/master')
            )
          )
        steps:
          - template: azure-templates/make-build-steps.yml
            parameters:
              make: install_dependencies

          - bash: |
              yarn danger ci
            displayName: 'Danger CI'


  # B) Run unit tests (use Linux OS, also required to generate certificates)
  - stage: Test
    dependsOn: []
    jobs:
      - job: unit_tests
        steps:
          - template: azure-templates/make-build-steps.yml
            parameters:
              make: build

          - script: |
              yarn test
            displayName: 'Unit tests exec'

          - bash: |
              bash <(curl -s https://codecov.io/bash)
            displayName: 'Code coverage'


  # C) Publish a new version of the package 'io-functions-commons' to the NPM 
  # registry if all the following conditions apply:
  #    - $ENABLE_MANUAL_DEPLOY == true 
  #    - Build / Test succeeded 
  #    - manual trigger
  - stage: Deploy_production
    pool:
      vmImage: 'windows-2019'
    condition: 
      and(
        succeeded(),
        and (
          eq(variables['ENABLE_MANUAL_DEPLOY'], true),
          eq(variables['Build.Reason'], 'Manual')
        )
      )
    dependsOn:
      - Build
      - Test
    jobs:
      - job: publish_package
        steps:
          - template: azure-templates/deploy-steps.yml
            parameters:
              deployType: 'publishPackage'
              packageVersion: '$(PACKAGE_VERSION)'
              githubToken: '$(GITHUB_TOKEN)'
              npmToken: '$(NPM_TOKEN)'
